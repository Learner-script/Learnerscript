{"version":3,"file":"helper.min.js","sources":["../src/helper.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Define the function with a clear and descriptive name, and then call it from other functions or code blocks as needed\n *\n * @module     block_learnerscript/helper\n * @copyright  2023 Moodle India Information Solutions Private Limited\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery',\n        'block_learnerscript/ajax',\n        'block_learnerscript/ajaxforms',\n        'core/str',\n        'core/modal_factory',\n        'core/modal_events',\n        'core/ajax',\n        'core/notification',\n        'block_learnerscript/bootstrapnotify/bootstrapnotify',\n        'block_learnerscript/smartfilter'\n    ],\n    function($, ajax, AjaxForms, Str, ModalFactory, ModalEvents, Ajax, notification, smartfilter) {\n        var helper = {\n            sendmessage: function(args, username) {\n                    Str.get_strings([{\n                    key: 'sendmessage',\n                    component: 'block_learnerscript'\n                }, {\n                    key: 'messageconfirmation',\n                    component: 'block_learnerscript'\n                }, {\n                    key: 'messagesent',\n                    component: 'block_learnerscript'\n                }, {\n                    key: 'supplyvalue',\n                    component: 'block_learnerscript'\n                }, {\n                    key: 'messagesending',\n                    component: 'block_learnerscript'\n                }, {\n                    key: 'close',\n                    component: 'block_learnerscript'\n                }, {\n                    key: 'submit',\n                    component: 'moodle'\n                }]).then(function(s) {\n                var userid = args.userid;\n                var reportinstance = args.reportinstance;\n                var formid = \"form_sendsms\" + userid;\n                var container = $(\"#sendsms_\" + reportinstance + '_' + userid).parents('table');\n                if ($('#ls_sendsms_' + reportinstance + '_' + userid).length < 1) {\n                    $(\"#sendsms_\" + reportinstance + '_' + userid).append('<div id=\"ls_sendsms_' + reportinstance + '_' +\n                    userid + '\" class=\"sendmessage\"><div class=\"messageloading\"></div><form id=\"' + formid +\n                    '\" ><textarea id=\"text_' + formid +\n                    '\" type=\"text\" name=\"message\"></textarea><input type=\"submit\" value = \"' + s[6] + '\"></form></div>');\n                }\n                var dlg = $('#ls_sendsms_' + reportinstance + '_' + userid).dialog({\n                    resizable: true,\n                    autoOpen: false,\n                    width: \"20%\",\n                    title: s[0],\n                    modal: false,\n                    dialogClass: 'sendsmsdialog',\n                    show: {\n                        effect: \"slide\",\n                        duration: 1000\n                    },\n                    position: {\n                        my: \"left\",\n                        at: \"right\",\n                        of: \"#sendsms_\" + reportinstance + '_' + userid,\n                        within: container\n                    },\n                    open: function() {\n                        $(this).closest(\".ui-dialog\")\n                            .find(\".ui-dialog-titlebar-close\")\n                            .removeClass(\"ui-dialog-titlebar-close\")\n                            .html(\"<span class='ui-button-icon-primary ui-icon ui-icon-closethick'></span>\");\n                            var Closebutton = $('.ui-icon-closethick').parent();\n                            $(Closebutton).attr({\n                                \"title\": s[5]\n                            });\n                        $(\".sendmessage\").not(this).each(function() {\n                            $(this).remove();\n                        });\n                    },\n                    close: function() {\n                        $(this).dialog('destroy').remove();\n                    }\n                });\n                dlg.dialog(\"open\");\n                $(\"#\" + formid).submit(function(e) {\n                    e.preventDefault();\n                    var helper = require('block_learnerscript/helper');\n                    var emptymessage = document.getElementById(\"text_\" + formid).value;\n                    if (!emptymessage) {\n                        $('.messageloading').html('<div class=\"alert alert-danger\">' + s[3] + '</div>');\n                    } else {\n                        var url = require('core/url');\n                        $('.messageloading').html('<center><img src=\"' + url.imageUrl(\"loader\", \"block_learnerscript\") +\n                        '\" alt=\"' + s[4] + '\" title=\"' + s[4] + '\"/></center>');\n                        $(\"#\" + formid).hide();\n                        var promise = Ajax.call([{\n                            methodname: 'core_message_send_instant_messages',\n                            args: {\n                                messages: [{\n                                    touserid: args.userid,\n                                    text: $(\"#\" + formid).serializeObject().message,\n                                    textformat: 0\n                                }]\n                            }\n                        }]);\n                        promise[0].done(function() {\n                            var message = s[2] + username;\n                            helper.notifications(message);\n                            dlg.dialog(\"close\");\n                        }).fail(function(ex) {\n                            // Do something with the exception\n                            $('.messageloading').html('<div class=\"alert alert-warning\">' + ex.message + '</div>');\n                        });\n                    }\n                });\n                return 'true';\n            }).fail();\n            },\n            ViewReportFilters: function(args) {\n                $('.' + args.activefilter).toggleClass(\"show\");\n                $('.' + args.inactivefilter).removeClass(\"show\");\n            },\n            deleteConfirm: function(args) {\n                return Str.get_strings([{\n                    key: 'deleteconfirmation',\n                    component: 'block_learnerscript'\n                }, {\n                    key: 'deleteallconfirm',\n                    component: 'block_learnerscript'\n                }, {\n                    key: 'confirm',\n                    component: 'block_learnerscript'\n                }, {\n                    key: 'close',\n                    component: 'block_learnerscript'\n                }]).then(function(s) {\n                    ModalFactory.create({\n                        title: s[0],\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        body: s[1]\n                    }).done(function(modal) {\n                        this.modal = modal;\n                        modal.setSaveButtonText(s[2]);\n                        modal.getRoot().on(ModalEvents.save, function(e) {\n                            e.preventDefault();\n                            var helper = require('block_learnerscript/helper');\n                            var promise = Ajax.call([{\n                                methodname: 'block_learnerscript_' + args.action,\n                                args: args\n                            }]);\n                            promise[0].done(function() {\n                                $('.plotgraphcontainer').removeClass('show').addClass('hide');\n                                $('#plotreportcontainer' + args.reportid).html('');\n                                var tabdata = $('#' + args.cid).attr('aria-controls');\n                                $(\"[data-cid='\" + args.cid + \"']\").remove();\n                                $('#' + tabdata).remove();\n                                if ($(\"#report_plottabs li:eq(0) a\").length < 1) {\n                                    $('#report_plottabs').remove();\n                                }\n\n                                helper.notifications(s[2]);\n                            }).fail();\n                            modal.hide();\n                            modal.destroy();\n                        });\n                        modal.show();\n                        $('.modal-header button.close').attr('title', s[3]);\n                    }.bind(this));\n                }.bind(this));\n            },\n            validatebasicform: function(validate) {\n                var getreport = [];\n                if (typeof validate == 'undefined') {\n                    $.each($('.basicparamsform select'), function(index, value) {\n                        var selectedval = $(value).val();\n                        if (selectedval == 0) {\n                            getreport.push(0);\n                        }\n                    });\n                }\n                return getreport;\n            },\n            /**\n             * Central method for call Select2 with Ajax in reports module\n             * @param {object} args Object with reportID and other required params\n             */\n            Select2Ajax: function(args) {\n                Str.get_strings([{\n                    key: 'selectonlyvalues',\n                    component: 'block_learnerscript'\n                }, {\n                    key: 'valuesnotsupported',\n                    component: 'block_learnerscript'\n                }]).then(function(s) {\n                    $(\"select[data-select2-ajax='1']\").each(function() {\n                        var instanceid = $(this).data('instanceid');\n                        var reportinstance = instanceid ? instanceid : args.reportid;\n                        if (args.action == 'rolewiseusers') {\n                            args.reportid = $(this).data('reportid');\n                            args.courses = $('[name=\"filter_courses\"]').val();\n                        }\n                        if (args.action === 'userlist') {\n                            args.setminimuminputlength = 2;\n                            args.courses = $('[name=\"filter_courses\"]').val();\n                        }\n                        if (!$(this).hasClass('select2-hidden-accessible')) {\n                            var $blockname;\n                            var methodname2;\n                            $(this).select2({\n                                ajax: {\n                                    data: function(params) {\n                                        var dataaction = $(this).data('action');\n\n                                        if (dataaction == 'filterusers' || dataaction == 'filter_courses') {\n                                            args.action = dataaction;\n                                            args.basicparamdata = JSON.stringify(smartfilter.BasicparamsData(reportinstance));\n                                            args.fiterdata = JSON.stringify(smartfilter.FilterData(reportinstance));\n                                            args.reportinstanceid = instanceid;\n                                            args.courses = $('[name=\"filter_courses\"]').val();\n\n                                        }\n                                        if (args.action == 'rolewiseusers') {\n                                            delete args.schuserslist;\n                                            delete args.scheduleid;\n                                            args.roleid = $(\"#id_role\" + reportinstance).val();\n                                            var roleid = args.roleid.split('_');\n                                            args.roleid = roleid[0];\n                                            args.contextlevel = roleid[1];\n                                            args.courses = $('[name=\"filter_courses\"]').val();\n\n                                        }\n                                        $.extend(params, args);\n                                        methodname2 = args.action;\n                                        if (methodname2 === 'userlist') {\n                                            $blockname = 'block_reportdashboard_';\n                                        } else {\n                                            $blockname = 'block_learnerscript_';\n                                        }\n\n                                        return params;\n                                    },\n                                    transport: function(params, success) {\n                                        var promise = Ajax.call([{\n                                            methodname: $blockname + methodname2,\n                                            args: params.data\n                                        }]);\n                                        promise[0].done(function(data) {\n                                            data = $.parseJSON(data);\n                                            success(data);\n                                        });\n                                        promise[0].fail(function() {\n                                            // Do something with the exception\n                                        });\n                                    },\n                                    processResults: function(data, params) {\n                                        // Parse the results into the format expected by Select2\n                                        // since we are using custom formatting functions we do not need to\n                                        // alter the remote JSON data, except to indicate that infinite\n                                        // scrolling can be used\n                                        params.page = params.page || 1;\n                                        var pagination = false;\n                                        if (args.action === 'userlist' || args.action == 'filter_courses'\n                                        || args.action == 'filterusers') {\n                                            pagination = false;\n                                        } else {\n                                            pagination = (params.page * 10) < data.total_count;\n                                        }\n                                        return {\n                                            results: data.items,\n                                            pagination: {\n                                                    more: pagination\n                                            }\n                                        };\n                                    }\n                                },\n                                escapeMarkup: function(markup) {\n                                    return markup;\n                                }, // Let our custom formatter work\n                                minimumInputLength: args.setminimuminputlength || 1,\n                                maximumselectionlength: args.maximumselectionlength,\n                                language: {\n                                    // You can find all of the options in the language files provided in the\n                                    // build. They all must be functions that return the string that should be\n                                    // displayed.\n                                    maximumSelected: function() {\n                                        if (args.action == 'filter_courses' || args.action == 'filterusers') {\n                                            return s[0];\n                                        }\n                                    }\n                                },\n                                templateResult: function formatRepo(repo) {\n                                    var markup;\n                                    if (repo.loading) {\n                                        return repo.text || s[1];\n                                    }\n                                    markup = repo.text || s[1];\n                                    return markup;\n                                }, // Omitted for brevity, see the source of this page\n                                templateSelection: function formatRepoSelection(repo) {\n                                    var markup;\n                                    if (repo.id == -1 && args.action == 'rolewiseusers') {\n                                        var reportid = repo.element.form.dataset.reportid || 0;\n                                        var scheduleid = repo.element.form.dataset.scheduleid || -1;\n                                        markup = \"<a href='javascript:void(0)' class='viewschusers'\" +\n                                            \"onclick='(function(e){ require(\\\"block_learnerscript/schedule\\\").viewschusers(\" +\n                                            \"{reportid:\" + reportid + \",scheduleid:\" + scheduleid + \", reportinstance:\" +\n                                            reportinstance + \"}) })(event);'>\" + repo.text + \"</a>\";\n                                    } else {\n                                        markup = repo.text;\n                                    }\n                                    return markup;\n                                } // Omitted for brevity, see the source of this page\n                            }).on('select2:select', function() {\n                                if (args.action == 'reportlist') {\n                                    var reportid = $(this).val();\n                                    window.location = M.cfg.wwwroot + '/blocks/learnerscript/viewreport.php?id=' + reportid;\n                                }\n                            });\n                        }\n                    });\n                });\n            },\n            getQueryParameters: function(str) {\n                return (str || document.location.search).replace(/(\\?)/, '&').split(\"&\").map(function(n) {\n                    n = n.split(\"=\");\n                    this[n[0]] = n[1];\n                    return this;\n                }.bind({}))[0];\n            },\n            DrilldownReport: function() {\n                var self = this;\n                // Drill down report\n                $('td a').click(function(e) {\n                    var url = $(this).attr('href');\n                    var drillurl = self.getQueryParameters(url);\n                    if (url.indexOf('viewreport.php') <= 0 || \"download\" in drillurl) {\n                        return;\n                    }\n                    e.preventDefault();\n                    self.ReportModelFromLink({container: $(this), url: url});\n\n                });\n            },\n            ReportModelFromLink: function(args) {\n                var tableid = args.container.parents().closest('table').attr('id');\n                var tablewidth = $(\"#\" + tableid + \"\").width();\n                var drillurl = this.getQueryParameters(args.url);\n                var reportid = parseInt(drillurl.id);\n                var filter = {};\n                if (args.url.indexOf('viewreport.php') <= 0 || \"download\" in drillurl) {\n                    return;\n                }\n                $.each(drillurl, function(key, val) {\n                    if (key.indexOf('filter') >= 0) {\n                        filter[key] = val;\n                    }\n                });\n                if ($(\"#reportcontainer\" + reportid).length == 0 || $(\"#plotreportcontainer\" + reportid).length == 0) {\n                    $('body').append('<div id=\"reportcontainer' + reportid + '\" style=\"display:none;\"></div>');\n                    $('body').append('<div id=\"plotreportcontainer' + reportid +\n                    '\" class=\"dialogplot\" style=\"display:none;\"></div>');\n                    var promise = ajax.call({\n                        args: {\n                            action: 'disablecolumnstatus',\n                            reportid: reportid\n                        },\n                        url: M.cfg.wwwroot + \"/blocks/learnerscript/ajax.php\",\n                    });\n                    var dialogid;\n                    promise.done(function(response) {\n                        var reporttypes = response;\n                        require(['block_learnerscript/reportwidget'], function(reportwidget) {\n                            reportwidget.CreateDashboardwidget({\n                                reportid: reportid,\n                                reporttype: response,\n                                basicparams: JSON.stringify(filter),\n                                lsfstartdate: 0,\n                                lsfenddate: $.now(),\n                            });\n                        });\n                        if (reporttypes == 'table') {\n                            dialogid = \"reportcontainer\";\n                        } else {\n                            dialogid = \"plotreportcontainer\";\n                        }\n                        var dlg = $(\"#\" + dialogid + reportid + \"\").dialog({\n                            resizable: true,\n                            autoOpen: false,\n                            dialogClass: \"drilldown\" + reportid,\n                            width: tablewidth,\n                            title: '',\n                            appendTo: \"#\" + tableid,\n                            modal: true,\n                            position: {\n                                my: \"center\",\n                                at: \"top\",\n                                of: \"#\" + tableid\n                            },\n                            open: function() {\n                                $(this).closest(\".ui-dialog\")\n                                .find(\".ui-dialog-titlebar-close\")\n                                .removeClass(\"ui-dialog-titlebar-close\")\n                                .html(\"<span class='ui-button-icon-primary ui-icon ui-icon-closethick'></span>\");\n                                var Closebutton = $('.ui-icon-closethick').parent();\n                                Str.get_string('close','block_learnerscript').then(function(s) {\n                                    $(Closebutton).attr({\n                                        \"title\": s\n                                    });\n                                });\n                                Str.get_string('viewmore','block_learnerscript').then(function(s) {\n                                    $(\".drilldown\" + reportid).append('<a href=' + args.url +\n                                    '><span class=\"reportdashboard_right\">' + s + '</span></a>');\n                                });\n                            },\n                            close: function() {\n                                $(this).dialog('destroy').remove();\n                            }\n                        });\n                        dlg.dialog(\"open\").prev(\".ui-dialog-titlebar\").css(\"color\", \"#0C75B6\");\n                    });\n                }\n            },\n            PlotForm: function(args) {\n                var url = M.cfg.wwwroot + '/blocks/learnerscript/ajax.php';\n                Str.get_string('plotgraph','block_learnerscript').then(function(s) {\n                    args.title = (!args.title) ? s : args.title;\n                });\n                AjaxForms.init(args, url);\n            },\n            dropdown: function(child) {\n                $('#' + child).toggle();\n            },\n            notifications: function(elements, notifytype) {\n                notifytype = notifytype || 'success';\n                $.notify({\n                    message: elements\n                }, {\n                    type: notifytype\n                }\n                );\n            },\n        };\n        return helper;\n    });\n"],"names":["define","$","ajax","AjaxForms","Str","ModalFactory","ModalEvents","Ajax","notification","smartfilter","sendmessage","args","username","get_strings","key","component","then","s","userid","reportinstance","formid","container","parents","length","append","dlg","dialog","resizable","autoOpen","width","title","modal","dialogClass","show","effect","duration","position","my","at","of","within","open","this","closest","find","removeClass","html","Closebutton","parent","attr","not","each","remove","close","submit","e","preventDefault","helper","require","document","getElementById","value","url","imageUrl","hide","call","methodname","messages","touserid","text","serializeObject","message","textformat","done","notifications","fail","ex","ViewReportFilters","activefilter","toggleClass","inactivefilter","deleteConfirm","create","type","types","SAVE_CANCEL","body","setSaveButtonText","getRoot","on","save","action","addClass","reportid","tabdata","cid","destroy","bind","validatebasicform","validate","getreport","index","val","push","Select2Ajax","$blockname","methodname2","instanceid","data","courses","setminimuminputlength","hasClass","select2","params","dataaction","basicparamdata","JSON","stringify","BasicparamsData","fiterdata","FilterData","reportinstanceid","schuserslist","scheduleid","roleid","split","contextlevel","extend","transport","success","promise","parseJSON","processResults","page","pagination","total_count","results","items","more","escapeMarkup","markup","minimumInputLength","maximumselectionlength","language","maximumSelected","templateResult","repo","loading","templateSelection","id","element","form","dataset","window","location","M","cfg","wwwroot","getQueryParameters","str","search","replace","map","n","DrilldownReport","self","click","drillurl","indexOf","ReportModelFromLink","tableid","tablewidth","parseInt","filter","response","reporttypes","reportwidget","CreateDashboardwidget","reporttype","basicparams","lsfstartdate","lsfenddate","now","appendTo","get_string","prev","css","PlotForm","init","dropdown","child","toggle","elements","notifytype","notify"],"mappings":"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"}