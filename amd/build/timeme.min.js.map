{"version":3,"file":"timeme.min.js","sources":["../src/timeme.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module timeme\n *\n * @module     block_learnerscript/timeme\n * @copyright  2017 Jason Zissman\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n/* Copyright (c) 2017 Jason Zissman\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n(function() {\n    // eslint-disable-next-line consistent-return\n    (function(root, factory) {\n        // eslint-disable-next-line no-undef\n        if (typeof module !== 'undefined' && module.exports) {\n            // CommonJS\n            // eslint-disable-next-line no-return-assign\n            // eslint-disable-next-line no-undef, no-return-assign\n            return module.exports = factory();\n        } else if (typeof define === 'function' && define.amd) {\n            // AMD\n            define([], function () {\n                return (root.TimeMe = factory());\n            });\n        } else {\n            // Global Variables\n            // eslint-disable-next-line no-return-assign\n            return root.TimeMe = factory();\n        }\n    })(this, function () {\n\n        var TimeMe = {\n\n            startStopTimes: {},\n            idleTimeoutMs: 30 * 1000,\n            currentIdleTimeMs: 0,\n            checkStateRateMs: 250,\n            active: false,\n            idle: false,\n            currentPageName: \"default-page-name\",\n            timeElapsedCallbacks: [],\n            userLeftCallbacks: [],\n            userReturnCallbacks: [],\n\n            trackTimeOnElement: function (elementId) {\n                var element = document.getElementById(elementId);\n                if (element) {\n                    element.addEventListener(\"mouseover\", function () {\n                        TimeMe.startTimer(elementId);\n                    });\n                    element.addEventListener(\"mousemove\", function () {\n                        TimeMe.startTimer(elementId);\n                    });\n                    element.addEventListener(\"mouseleave\", function () {\n                        TimeMe.stopTimer(elementId);\n                    });\n                    element.addEventListener(\"keypress\", function () {\n                        TimeMe.startTimer(elementId);\n                    });\n                    element.addEventListener(\"focus\", function () {\n                        TimeMe.startTimer(elementId);\n                    });\n                }\n            },\n\n            getTimeOnElementInSeconds: function (elementId) {\n                var time = TimeMe.getTimeOnPageInSeconds(elementId);\n                if (time) {\n                    return time;\n                } else {\n                    return 0;\n                }\n            },\n\n            // StartTime is optional. If provided, must be of type Date(). By providing\n            // startTime, you are overriding the internal timing mechanism and manually\n            // indicating the start time.\n            startTimer: function (pageName, startTime) {\n                if (!pageName) {\n                    pageName = TimeMe.currentPageName;\n                }\n\n                if (TimeMe.startStopTimes[pageName] === undefined) {\n                    TimeMe.startStopTimes[pageName] = [];\n                } else {\n                    var arrayOfTimes = TimeMe.startStopTimes[pageName];\n                    var latestStartStopEntry = arrayOfTimes[arrayOfTimes.length - 1];\n                    if (latestStartStopEntry !== undefined && latestStartStopEntry.stopTime === undefined) {\n                        // Can't start new timer until previous finishes.\n                        return;\n                    }\n                }\n                TimeMe.startStopTimes[pageName].push({\n                    \"startTime\": startTime || new Date(),\n                    \"stopTime\": undefined\n                });\n                TimeMe.active = true;\n            },\n\n            stopAllTimers: function () {\n                var pageNames = Object.keys(TimeMe.startStopTimes);\n                for (var i = 0; i < pageNames.length; i++) {\n                    TimeMe.stopTimer(pageNames[i]);\n                }\n            },\n\n            // StopTime is optional. If provided, must be of type Date(). By providing\n            // stopTime, you are overriding the internal timing mechanism and manually\n            // indicating the stop time.\n            stopTimer: function (pageName, stopTime) {\n                if (!pageName) {\n                    pageName = TimeMe.currentPageName;\n                }\n                var arrayOfTimes = TimeMe.startStopTimes[pageName];\n                if (arrayOfTimes === undefined || arrayOfTimes.length === 0) {\n                    // Can't stop timer before you've started it.\n                    return;\n                }\n                if (arrayOfTimes[arrayOfTimes.length - 1].stopTime === undefined) {\n                    arrayOfTimes[arrayOfTimes.length - 1].stopTime = stopTime || new Date();\n                }\n                TimeMe.active = false;\n            },\n\n            getTimeOnCurrentPageInSeconds: function () {\n                return TimeMe.getTimeOnPageInSeconds(TimeMe.currentPageName);\n            },\n\n            getTimeOnPageInSeconds: function (pageName) {\n                var timeInMs = TimeMe.getTimeOnPageInMilliseconds(pageName);\n                if (timeInMs === undefined) {\n                    return undefined;\n                } else {\n                    return timeInMs / 1000;\n                }\n            },\n\n            getTimeOnCurrentPageInMilliseconds: function () {\n                return TimeMe.getTimeOnPageInMilliseconds(TimeMe.currentPageName);\n            },\n\n            getTimeOnPageInMilliseconds: function (pageName) {\n\n                var totalTimeOnPage = 0;\n\n                var arrayOfTimes = TimeMe.startStopTimes[pageName];\n                if (arrayOfTimes === undefined) {\n                    // Can't get time on page before you've started the timer.\n                    return;\n                }\n\n                var timeSpentOnPageInSeconds = 0;\n                for (var i = 0; i < arrayOfTimes.length; i++) {\n                    var startTime = arrayOfTimes[i].startTime;\n                    var stopTime = arrayOfTimes[i].stopTime;\n                    if (stopTime === undefined) {\n                        stopTime = new Date();\n                    }\n                    var difference = stopTime - startTime;\n                    timeSpentOnPageInSeconds += (difference);\n                }\n\n                totalTimeOnPage = Number(timeSpentOnPageInSeconds);\n                // eslint-disable-next-line consistent-return\n                return totalTimeOnPage;\n            },\n\n            getTimeOnAllPagesInSeconds: function () {\n                var allTimes = [];\n                var pageNames = Object.keys(TimeMe.startStopTimes);\n                for (var i = 0; i < pageNames.length; i++) {\n                    var pageName = pageNames[i];\n                    var timeOnPage = TimeMe.getTimeOnPageInSeconds(pageName);\n                    allTimes.push({\n                        \"pageName\": pageName,\n                        \"timeOnPage\": timeOnPage\n                    });\n                }\n                return allTimes;\n            },\n\n            setIdleDurationInSeconds: function (duration) {\n                var durationFloat = parseFloat(duration);\n                if (isNaN(durationFloat) === false) {\n                    TimeMe.idleTimeoutMs = duration * 1000;\n                } else {\n                    // eslint-disable-next-line no-throw-literal\n                    throw {\n                        name: \"InvalidDurationException\",\n                        message: \"An invalid duration time (\" + duration + \") was provided.\"\n                    };\n                }\n                return this;\n            },\n\n            setCurrentPageName: function (pageName) {\n                TimeMe.currentPageName = pageName;\n                return this;\n            },\n\n            resetRecordedPageTime: function (pageName) {\n                delete TimeMe.startStopTimes[pageName];\n            },\n\n            resetAllRecordedPageTimes: function () {\n                var pageNames = Object.keys(TimeMe.startStopTimes);\n                for (var i = 0; i < pageNames.length; i++) {\n                    TimeMe.resetRecordedPageTime(pageNames[i]);\n                }\n            },\n\n            resetIdleCountdown: function () {\n                if (TimeMe.idle) {\n                    TimeMe.triggerUserHasReturned();\n                }\n                TimeMe.idle = false;\n                TimeMe.currentIdleTimeMs = 0;\n            },\n\n            callWhenUserLeaves: function (callback, numberOfTimesToInvoke) {\n                this.userLeftCallbacks.push({\n                    callback: callback,\n                    numberOfTimesToInvoke: numberOfTimesToInvoke\n                });\n            },\n\n            callWhenUserReturns: function (callback, numberOfTimesToInvoke) {\n                this.userReturnCallbacks.push({\n                    callback: callback,\n                    numberOfTimesToInvoke: numberOfTimesToInvoke\n                });\n            },\n\n            triggerUserHasReturned: function () {\n                if (!TimeMe.active) {\n                    for (var i = 0; i < this.userReturnCallbacks.length; i++) {\n                        var userReturnedCallback = this.userReturnCallbacks[i];\n                        var numberTimes = userReturnedCallback.numberOfTimesToInvoke;\n                        if (isNaN(numberTimes) || (numberTimes === undefined) || numberTimes > 0) {\n                            userReturnedCallback.numberOfTimesToInvoke -= 1;\n                            userReturnedCallback.callback();\n                        }\n                    }\n                }\n                TimeMe.startTimer();\n            },\n\n            triggerUserHasLeftPage: function () {\n                if (TimeMe.active) {\n                    for (var i = 0; i < this.userLeftCallbacks.length; i++) {\n                        var userHasLeftCallback = this.userLeftCallbacks[i];\n                        var numberTimes = userHasLeftCallback.numberOfTimesToInvoke;\n                        if (isNaN(numberTimes) || (numberTimes === undefined) || numberTimes > 0) {\n                            userHasLeftCallback.numberOfTimesToInvoke -= 1;\n                            userHasLeftCallback.callback();\n                        }\n                    }\n                }\n                TimeMe.stopAllTimers();\n            },\n\n            callAfterTimeElapsedInSeconds: function (timeInSeconds, callback) {\n                TimeMe.timeElapsedCallbacks.push({\n                    timeInSeconds: timeInSeconds,\n                    callback: callback,\n                    pending: true\n                });\n            },\n\n            checkState: function () {\n                for (var i = 0; i < TimeMe.timeElapsedCallbacks.length; i++) {\n                    // eslint-disable-next-line max-len\n                    if (TimeMe.timeElapsedCallbacks[i].pending && TimeMe.getTimeOnCurrentPageInSeconds() > TimeMe.timeElapsedCallbacks[i].timeInSeconds) {\n                        TimeMe.timeElapsedCallbacks[i].callback();\n                        TimeMe.timeElapsedCallbacks[i].pending = false;\n                    }\n                }\n\n                if (TimeMe.idle === false && TimeMe.currentIdleTimeMs > TimeMe.idleTimeoutMs) {\n                    TimeMe.idle = true;\n                    TimeMe.triggerUserHasLeftPage();\n                } else {\n                    TimeMe.currentIdleTimeMs += TimeMe.checkStateRateMs;\n                }\n            },\n\n            visibilityChangeEventName: undefined,\n            hiddenPropName: undefined,\n\n            listenForVisibilityEvents: function () {\n\n                if (typeof document.hidden !== \"undefined\") {\n                    TimeMe.hiddenPropName = \"hidden\";\n                    TimeMe.visibilityChangeEventName = \"visibilitychange\";\n                } else if (typeof document.mozHidden !== \"undefined\") {\n                    TimeMe.hiddenPropName = \"mozHidden\";\n                    TimeMe.visibilityChangeEventName = \"mozvisibilitychange\";\n                } else if (typeof document.msHidden !== \"undefined\") {\n                    TimeMe.hiddenPropName = \"msHidden\";\n                    TimeMe.visibilityChangeEventName = \"msvisibilitychange\";\n                } else if (typeof document.webkitHidden !== \"undefined\") {\n                    TimeMe.hiddenPropName = \"webkitHidden\";\n                    TimeMe.visibilityChangeEventName = \"webkitvisibilitychange\";\n                }\n\n                document.addEventListener(TimeMe.visibilityChangeEventName, function () {\n                    if (document[TimeMe.hiddenPropName]) {\n                        TimeMe.triggerUserHasLeftPage();\n                    } else {\n                        TimeMe.triggerUserHasReturned();\n                    }\n                }, false);\n\n                window.addEventListener('blur', function () {\n                    TimeMe.triggerUserHasLeftPage();\n                });\n\n                window.addEventListener('focus', function () {\n                    TimeMe.triggerUserHasReturned();\n                });\n\n                document.addEventListener(\"mousemove\", function () { TimeMe.resetIdleCountdown(); });\n                document.addEventListener(\"keyup\", function () { TimeMe.resetIdleCountdown(); });\n                document.addEventListener(\"touchstart\", function () { TimeMe.resetIdleCountdown(); });\n                window.addEventListener(\"scroll\", function () { TimeMe.resetIdleCountdown(); });\n\n                setInterval(function () {\n                    TimeMe.checkState();\n                }, TimeMe.checkStateRateMs);\n            },\n\n            websocket: undefined,\n\n            websocketHost: undefined,\n\n            setUpWebsocket: function (websocketOptions) {\n                if (window.WebSocket && websocketOptions) {\n                    var websocketHost = websocketOptions.websocketHost; // \"ws://hostname:port\"\n                    try {\n                        TimeMe.websocket = new WebSocket(websocketHost);\n                        window.onbeforeunload = function () {\n                            TimeMe.sendCurrentTime(websocketOptions.appId);\n                        };\n                        TimeMe.websocket.onopen = function () {\n                            TimeMe.sendInitWsRequest(websocketOptions.appId);\n                        };\n                        TimeMe.websocket.onerror = function (error) {\n                            if (console) {\n                                // eslint-disable-next-line no-console\n                                console.error(\"Error occurred in websocket connection: \" + error);\n                            }\n                        };\n                        TimeMe.websocket.onmessage = function (event) {\n                            if (console) {\n                                // eslint-disable-next-line no-console\n                                console.error(event.data);\n                            }\n                        };\n                    } catch (error) {\n                        if (console) {\n                            // eslint-disable-next-line no-console\n                            console.error(\"Failed to connect to websocket host.  Error:\" + error);\n                        }\n                    }\n                }\n                return this;\n            },\n\n            websocketSend: function (data) {\n                TimeMe.websocket.send(JSON.stringify(data));\n            },\n\n            sendCurrentTime: function (appId) {\n                var timeSpentOnPage = TimeMe.getTimeOnCurrentPageInMilliseconds();\n                var data = {\n                    type: \"INSERT_TIME\",\n                    appId: appId,\n                    timeOnPageMs: timeSpentOnPage,\n                    pageName: TimeMe.currentPageName\n                };\n                TimeMe.websocketSend(data);\n            },\n            sendInitWsRequest: function (appId) {\n                var data = {\n                    type: \"INIT\",\n                    appId: appId\n                };\n                TimeMe.websocketSend(data);\n            },\n\n            initialize: function (options) {\n\n                var idleTimeoutInSeconds = TimeMe.idleTimeoutMs || 30;\n                var currentPageName = TimeMe.currentPageName || \"default-page-name\";\n                // eslint-disable-next-line no-undef-init\n                var websocketOptions = undefined;\n                // eslint-disable-next-line no-undef-init\n                var initialStartTime = undefined;\n\n                if (options) {\n                    idleTimeoutInSeconds = options.idleTimeoutInSeconds || idleTimeoutInSeconds;\n                    currentPageName = options.currentPageName || currentPageName;\n                    websocketOptions = options.websocketOptions;\n                    initialStartTime = options.initialStartTime;\n                }\n\n                TimeMe.setIdleDurationInSeconds(idleTimeoutInSeconds)\n                    .setCurrentPageName(currentPageName)\n                    .setUpWebsocket(websocketOptions)\n                    .listenForVisibilityEvents();\n\n                // TODO - only do this if page currently visible.\n\n                TimeMe.startTimer(undefined, initialStartTime);\n            }\n        };\n        return TimeMe;\n    });\n}).call(this);"],"names":["root","factory","this","TimeMe","startStopTimes","idleTimeoutMs","currentIdleTimeMs","checkStateRateMs","active","idle","currentPageName","timeElapsedCallbacks","userLeftCallbacks","userReturnCallbacks","trackTimeOnElement","elementId","element","document","getElementById","addEventListener","startTimer","stopTimer","getTimeOnElementInSeconds","time","getTimeOnPageInSeconds","pageName","startTime","undefined","arrayOfTimes","latestStartStopEntry","length","stopTime","push","Date","stopAllTimers","pageNames","Object","keys","i","getTimeOnCurrentPageInSeconds","timeInMs","getTimeOnPageInMilliseconds","getTimeOnCurrentPageInMilliseconds","timeSpentOnPageInSeconds","Number","getTimeOnAllPagesInSeconds","allTimes","timeOnPage","setIdleDurationInSeconds","duration","durationFloat","parseFloat","isNaN","name","message","setCurrentPageName","resetRecordedPageTime","resetAllRecordedPageTimes","resetIdleCountdown","triggerUserHasReturned","callWhenUserLeaves","callback","numberOfTimesToInvoke","callWhenUserReturns","userReturnedCallback","numberTimes","triggerUserHasLeftPage","userHasLeftCallback","callAfterTimeElapsedInSeconds","timeInSeconds","pending","checkState","visibilityChangeEventName","hiddenPropName","listenForVisibilityEvents","hidden","mozHidden","msHidden","webkitHidden","window","setInterval","websocket","websocketHost","setUpWebsocket","websocketOptions","WebSocket","onbeforeunload","sendCurrentTime","appId","onopen","sendInitWsRequest","onerror","error","console","onmessage","event","data","websocketSend","send","JSON","stringify","type","timeOnPageMs","initialize","options","idleTimeoutInSeconds","initialStartTime","module","exports","define","amd","call"],"mappings":"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"}