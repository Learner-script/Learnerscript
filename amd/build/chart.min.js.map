{"version":3,"file":"chart.min.js","sources":["../src/chart.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Describe different types of charts.\n *\n * @module     block_learnerscript/chart\n * @copyright  2023 YOUR NAME <your@email.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery',\n        'core/ajax',\n        'block_learnerscript/highcharts',\n        'block_learnerscript/smartfilter',\n    ],\n    function($, Ajax, Highcharts, smartfilter) {\n        /**\n         * Get highchart report for report with Ajax request\n         * @param object reportid and reportdata\n         * @return Generate highchart report\n         */\n        var chart = {\n            HighchartsAjax: function(args) {\n                args.cols = JSON.stringify(args.cols);\n                args.instanceid = args.reportid;\n                args.filters = args.filters || smartfilter.FilterData(args.instanceid);\n                args.basicparams = JSON.stringify(smartfilter.BasicparamsData(args.instanceid));\n                args.filters['lsfstartdate'] = $('#lsfstartdate').val();\n                args.filters['lsfenddate'] = $('#lsfenddate').val();\n                if (typeof args.filters['filter_courses'] == 'undefined') {\n                    var filter_courses = $('.dashboardcourses').val();\n                    if (filter_courses != 1) {\n                        args.filters['filter_courses'] = filter_courses;\n                    }\n                }\n                args.filters = JSON.stringify(args.filters);\n\n                // Request\n                var promise = Ajax.call([{\n                    methodname: 'block_learnerscript_generate_plotgraph',\n                    args: args,\n                }]);\n\n                // Preload\n                $('#report_plottabs').show();\n                $(\"#plotreportcontainer\" +\n                args.instanceid).html('<img src=\"' +\n                M.util.image_url('loading', 'block_learnerscript') + '\" id=\"reportloadingimage\" />');\n\n                // Response process\n                promise[0].done(function(response) {\n                    response = JSON.parse(response);\n                    if (response.plot) {\n                        if (response.plot.error === true) {\n                            $('#plotreportcontainer' +\n                            args.instanceid).html(\"<div class='alert alert-warning'>No data available</div>\");\n                        } else {\n                            response.plot.reportid = args.reportid;\n                            response.plot.reportinstance = args.reportid;\n                            if (response.plot.data && response.plot.data.length > 0) {\n                                require(['block_learnerscript/report'], function(report) {\n                                    report.generate_plotgraph(response.plot);\n                                });\n                            } else {\n                                $('#plotreportcontainer' +\n                                args.instanceid).html(\"<div class='alert alert-warning'>No data available</div>\");\n                            }\n                        }\n                    }\n                });\n            },\n\n            // Piechart\n            piechart: function(chartdata) {\n                Highcharts.chart(chartdata.containerid, {\n                    chart: {\n                        plotBackgroundColor: null,\n                        plotBorderWidth: null,\n                        plotShadow: false,\n                        type: 'pie',\n                        width: chartdata.width || null,\n                        height: chartdata.height || null,\n                        margin: chartdata.margin || null\n                    },\n                    credits: {\n                        enabled: false\n                    },\n                    title: {\n                        text: chartdata.title\n                    },\n                    tooltip: {\n                        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n                    },\n                    plotOptions: {\n                        pie: {\n                            allowPointSelect: true,\n                            cursor: 'pointer',\n                            shadow: false,\n                            dataLabels: {\n                                enabled: chartdata.datalabels\n                            },\n                            showInLegend: chartdata.showlegend\n                        }\n                    },\n                    series: [{\n                        name: chartdata.serieslabel,\n                        colorByPoint: true,\n                        data: chartdata.data,\n                    }]\n                });\n            },\n            // Line, Bar and column charts\n            lbchart: function(chartdata) {\n                var charttype = chartdata.type;\n                var chartcolors = ['#336B87', '#90AFC5', '#688B8A', '#A0B084',\n                '#FAEFD4', '#A57C65', '#1aadce', '#492970', '#f28f43', '#77a1e5', '#c42525', '#a6c96a'];\n                if (typeof $(chartdata.container).data('chartcolor') != 'undefined') {\n                    chartcolors = ['#' + $(chartdata.container).data('chartcolor') + ''];\n                }\n                Highcharts.chart(chartdata.containerid, {\n                    chart: {\n                        type: charttype,\n                        height: chartdata.height || null,\n                        zoomType: 'x',\n                        styledMode: true\n                    },\n                    colors: chartcolors,\n                    title: {\n                        text: chartdata.title\n                    },\n                    exporting: {\n                        enabled: false\n                    },\n                    xAxis: {\n                        categories: chartdata.categorydata,\n                        labels: {\n                            enabled: chartdata.datalabels == 1 ? true : false\n                        },\n                        title: {\n                            text: chartdata.ylabel\n                        }\n                    },\n                    yAxis: {\n\n                        title: {\n                            text: chartdata.pcalcs ? chartdata.pcalcs : chartdata.title}\n                    },\n                    plotOptions: {\n                        bar: {\n                            dataLabels: {\n                                enabled: chartdata.datalabels == 1 ? true : false,\n                                formatter: function() {\n                                  return this.point.label;\n                                }\n                            },\n                            enableMouseTracking: chartdata.datalabels == 1 ? false : true,\n                            borderRadius: 5\n                        },\n                        spline: {\n                            dataLabels: {\n                                enabled: chartdata.datalabels == 1 ? true : false,\n                                 formatter: function() {\n                                  return this.point.label;\n                                }\n                            },\n                            enableMouseTracking: chartdata.datalabels == 1 ? false : true\n                        },\n                        column: {\n                            dataLabels: {\n                                enabled: chartdata.datalabels === 1 ? true : false,\n                                formatter: function() {\n                                  return this.point.label;\n                                }\n                            },\n                            enableMouseTracking: chartdata.datalabels === 1 ? false : true,\n                            borderRadius: 5\n                        }\n                    },\n                    tooltip: {\n                        pointFormatter: function() {\n                            return '<span style=\"color:' + this.series.color +\n                            ';\">\\u25CF</span> ' + this.series.name + ' - ' + this.label;\n                        }\n                    },\n                    credits: {\n                        enabled: true\n                    },\n                    legend: {\n                        enabled: chartdata.showlegend,\n                    },\n                    series: chartdata.data,\n                    responsive: {\n                        rules: [{\n                            condition: {\n                                maxWidth: 500\n                            },\n                            chartOptions: {\n                                legend: {\n                                    align: 'center',\n                                    verticalAlign: 'bottom',\n                                    layout: 'horizontal'\n                                },\n                                yAxis: {\n                                    labels: {\n                                        align: 'left',\n                                        x: 0,\n                                        y: 10\n                                    },\n                                    title: {\n                                        text: null\n                                    }\n                                },\n                                subtitle: {\n                                    text: null\n                                },\n                                credits: {\n                                    enabled: false\n                                }\n                            }\n                        }]\n                    }\n                });\n            },\n            // Combination chart with line,bar and pie\n            combinationchart: function(chartdata) {\n                var chartcolors = ['#90AFC5', '#336B87', '#FAEFD4', '#A57C65',\n                '#1aadce', '#492970', '#f28f43', '#77a1e5', '#c42525', '#a6c96a'];\n                if (typeof $(chartdata.container).data('chartcolor') != 'undefined') {\n                    chartcolors = ['#' + $(chartdata.container).data('chartcolor') + ''];\n                }\n                Highcharts.chart(chartdata.containerid, {\n                    zoomType: 'xy',\n                    title: {\n                        text: chartdata.title\n                    },\n                    colors: chartcolors,\n                    xAxis: {\n                        categories: chartdata.categorydata,\n                        crosshair: true,\n                        labels: {\n                            enabled: chartdata.datalabels == 1 ? true : false\n                        }\n                    },\n                    exporting: {\n                        enabled: false\n                    },\n                     yAxis: [{\n                            title: {\n                                text: chartdata.name\n                            }\n                            }, {\n                                opposite: true, // Optional, you can have it on the same side.\n                                title: {\n                                    text: chartdata.name\n                                }\n                            }],\n                    credits: {\n                        enabled: false\n                    },\n                    tooltip: {\n                        pointFormatter: function() {\n                            return '<span style=\"color:' + this.series.color +\n                            ';\">\\u25CF</span> ' + this.series.name + ' - ' + this.label;\n                        }\n                    },\n                    dataLabels: {\n                        enabled: chartdata.datalabels == 1 ? true : false,\n                        formatter: function() {\n                            return this.point.label;\n                        }\n                    },\n                    legend: {\n                        enabled: chartdata.showlegend == 1 ? true : false\n                    },\n                    series: chartdata.data\n                });\n            },\n            HeatMap: function(chartdata) {\n                Highcharts.chart(\"testaccess\", {\n\n                    chart: {\n                        type: chartdata.type,\n                        marginTop: 40,\n                        marginBottom: 80,\n                        plotBorderWidth: 1\n                    },\n                    title: {\n                        text: null\n                    },\n                    exporting: {\n                        enabled: false\n                    },\n                    xAxis: {\n                        visible: true,\n                        categories: chartdata.xAxis,\n                    },\n\n                    yAxis: {\n                        visible: true,\n                        categories: chartdata.yAxis,\n                        title: null,\n                        reversed: false\n                    },\n\n                    colorAxis: {\n                        min: 0,\n                        minColor: '#FFFFFF',\n                        maxColor: Highcharts.getOptions().colors[0]\n                    },\n\n                    legend: {\n                        enabled: false,\n                    },\n\n                    series: [{\n                        name: 'User LMS access',\n                        borderWidth: 1,\n                        data: chartdata.data,\n                        dataLabels: {\n                            enabled: true,\n                            color: '#000000'\n                        }\n                    }],\n                });\n            },\n             SparkLines: function() {\n            Highcharts.SparkLine = function(a, b, c) {\n                var hasRenderToArg = typeof a === 'string' || a.nodeName,\n                    options = arguments[hasRenderToArg ? 1 : 0],\n                    defaultOptions = {\n                        chart: {\n                            renderTo: (options.chart && options.chart.renderTo) || this,\n                            backgroundColor: null,\n                            borderWidth: 0,\n                            type: 'area',\n                            margin: [2, 0, 2, 0],\n                            width: 120,\n                            height: 100,\n                            style: {\n                                overflow: 'visible'\n                            },\n                            // Small optimalization, saves 1-2 ms each sparkline\n                            skipClone: true\n                        },\n                        title: {\n                            text: ''\n                        },\n                        credits: {\n                            enabled: false\n                        },\n                        exporting: {\n                            enabled: false\n                        },\n                        xAxis: {\n                            labels: {\n                                enabled: false\n                            },\n                            title: {\n                                text: null\n                            },\n                            startOnTick: false,\n                            endOnTick: false,\n                            tickPositions: []\n                        },\n                        yAxis: {\n                            endOnTick: false,\n                            startOnTick: false,\n                            labels: {\n                                enabled: false\n                            },\n                            title: {\n                                text: null\n                            },\n                            tickPositions: [0]\n                        },\n                        legend: {\n                            enabled: false\n                        },\n                        tooltip: {\n                            backgroundColor: null,\n                            borderWidth: 0,\n                            shadow: false,\n                            useHTML: true,\n                            hideDelay: 0,\n                            shared: true,\n                            padding: 0,\n                            positioner: function(w, h, point) {\n                                return {\n                                    x: point.plotX - w / 2,\n                                    y: point.plotY - h\n                                };\n                            }\n                        },\n                        plotOptions: {\n                            series: {\n                                animation: false,\n                                lineWidth: 1,\n                                shadow: false,\n                                states: {\n                                    hover: {\n                                        lineWidth: 1\n                                    }\n                                },\n                                marker: {\n                                    radius: 1,\n                                    states: {\n                                        hover: {\n                                            radius: 2\n                                        }\n                                    }\n                                },\n                                fillOpacity: 0.25\n                            },\n                            column: {\n                                negativeColor: '#910000',\n                                borderColor: 'silver',\n                                borderRadius: 15\n                            }\n                        }\n                    };\n                options = Highcharts.merge(defaultOptions, options);\n                return hasRenderToArg ? new Highcharts.Chart(a, options, c) : new Highcharts.Chart(options, b);\n            };\n        },\n        ProgressBar: function(chartdata) {\n            Highcharts.chart(chartdata.containerid, {\n                title: {\n                    text: chartdata.title\n                },\n                chart: {\n                    renderTo: chartdata.containerid,\n                    type: 'bar',\n                    height: chartdata.height || 15,\n                    backgroundColor: chartdata.backgroundColor || 'transparent',\n                    margin: chartdata.margin || null\n                },\n                plotOptions: {\n                    bar: {borderRadius: 5},\n                    series: {\n                        cursor: 'pointer',\n                        point: {\n                            events: {\n                                click: function() {\n                                    if (typeof chartdata.data.link !== 'undefined') {\n                                        require('block_learnerscript/helper').ReportModelFromLink({\n                                            container: $(\"#\" + chartdata.containerid),\n                                            url: chartdata.data.link\n                                        });\n                                    }\n                                }\n                            }\n                        },\n                    }\n                },\n                exporting: {\n                    enabled: false\n                },\n                credits: chartdata.credits || false,\n                tooltip: chartdata.tooltip || false,\n                legend: chartdata.legend || false,\n                xAxis: {\n                    visible: false,\n                },\n                yAxis: {\n                    visible: false,\n                    min: 0,\n                    max: 100,\n                },\n                series: [{\n                    data: [100],\n                    grouping: false,\n                    animation: false,\n                    enableMouseTracking: false,\n                    showInLegend: false,\n                    color: '#CCC',\n                    pointWidth: 15,\n                    dataLabels: {\n                        className: 'highlight',\n                        format: chartdata.format || null,\n                        enabled: false,\n                        align: 'left',\n                        style: {\n                            color: '#0294A5',\n                            textOutline: false,\n                            fontSize: '9px',\n                            fontWeight: 'normal'\n                        }\n                    }\n                }, {\n                    enableMouseTracking: true,\n                    data: chartdata.data || [0],\n                    color: '#0294A5',\n                    pointWidth: 15,\n                    animation: {\n                        duration: 250,\n                    },\n                    dataLabels: {\n                        enabled: true,\n                        inside: true,\n                        align: 'right',\n                        format: '{point.y}%',\n                        style: {\n                            color: '#FFF',\n                            textOutline: false,\n                            fontSize: '9px',\n                            fontWeight: 'normal'\n                        }\n                    }\n                }]\n            });\n        },\n        SparkLineReport: function() {\n            var $tds = $('.spark-report');\n            var time = +new Date(),\n                i,\n                $td,\n                len = $tds.length,\n                stringdata,\n                arr,\n                data,\n                chart;\n            for (i = 0; i < len; i += 1) {\n                $td = $($tds[i]);\n                stringdata = $td.data('sparkline');\n                var stringlink = $td.data('link');\n                arr = stringdata.split('; ');\n                data = $.map(arr[0].split(', '), parseFloat);\n                data.link = stringlink;\n                chart = {};\n                if (arr[1]) {\n                    chart.type = arr[1];\n                }\n                chart.containerid = $td.attr('id');\n                chart.chartname = '';\n                chart.datalabels = false;\n                chart.showlegend = false;\n                chart.serieslabel = false;\n                chart.categorydata = $td.text();\n                switch (arr[1]) {\n                    case 'pie':\n                        chart.data = data;\n                        chart.width = '65';\n                            chart.height = '65';\n                        chart.margin = [0, 0, 0, 0];\n                            this.piechart(chart);\n                        break;\n                    case 'spline':\n                    case 'bar':\n                    case 'column':\n                        chart.data = {\n                            data: data,\n                            name: $td.data('name'),\n                            type: 'bar'\n                        };\n                        chart.serieslabel = $td.data('serieslabel');\n                        chart.title = $td.data('title');\n                        this.lbchart(chart);\n                        break;\n                    case 'progressbar':\n                        chart.data = data;\n                        chart.title = $td.data('title');\n                        chart.width = '100';\n                            chart.height = '15';\n                        chart.margin = [0, 0, 0, 0];\n\n                        this.ProgressBar(chart);\n                        break;\n                    default:\n                        this.SparkLines();\n                        Highcharts.SparkLine($td.attr('id'), {\n                            title: {\n                                text: ''\n                            },\n                            credits: {\n                                enabled: false\n                            },\n                            series: [{\n                                data: data,\n                                pointStart: 1,\n                                dataLabels: {\n                                    enabled: false\n                                }\n                            }],\n                            tooltip: {\n                                headerFormat: '<span style=\"font-size: 10px\">' +\n                                                $td.parent().find('th').html() + '<br/> Q{point.x}: </span>',\n                                pointFormat: ' <b>{point.y}</b>'\n                            },\n                            chart: chart\n                        });\n                        break;\n                }\n                // If the process takes too much time, run a timeout to allow interaction with the browser\n                if (new Date() - time > 500) {\n                    $tds.splice(0, i + 1);\n                    setTimeout(this.SparkLineReport, 0);\n                    break;\n                }\n            }\n        }\n        };\n        return chart;\n    });\n"],"names":["define","$","Ajax","Highcharts","smartfilter","chart","HighchartsAjax","args","cols","JSON","stringify","instanceid","reportid","filters","FilterData","basicparams","BasicparamsData","val","filter_courses","promise","call","methodname","show","html","M","util","image_url","done","response","parse","plot","error","reportinstance","data","length","require","report","generate_plotgraph","piechart","chartdata","containerid","plotBackgroundColor","plotBorderWidth","plotShadow","type","width","height","margin","credits","enabled","title","text","tooltip","pointFormat","plotOptions","pie","allowPointSelect","cursor","shadow","dataLabels","datalabels","showInLegend","showlegend","series","name","serieslabel","colorByPoint","lbchart","charttype","chartcolors","container","zoomType","styledMode","colors","exporting","xAxis","categories","categorydata","labels","ylabel","yAxis","pcalcs","bar","formatter","this","point","label","enableMouseTracking","borderRadius","spline","column","pointFormatter","color","legend","responsive","rules","condition","maxWidth","chartOptions","align","verticalAlign","layout","x","y","subtitle","combinationchart","crosshair","opposite","HeatMap","marginTop","marginBottom","visible","reversed","colorAxis","min","minColor","maxColor","getOptions","borderWidth","SparkLines","SparkLine","a","b","c","hasRenderToArg","nodeName","options","arguments","defaultOptions","renderTo","backgroundColor","style","overflow","skipClone","startOnTick","endOnTick","tickPositions","useHTML","hideDelay","shared","padding","positioner","w","h","plotX","plotY","animation","lineWidth","states","hover","marker","radius","fillOpacity","negativeColor","borderColor","merge","Chart","ProgressBar","events","click","link","ReportModelFromLink","url","max","grouping","pointWidth","className","format","textOutline","fontSize","fontWeight","duration","inside","SparkLineReport","i","$td","stringdata","arr","$tds","time","Date","len","stringlink","split","map","parseFloat","attr","chartname","pointStart","headerFormat","parent","find","splice","setTimeout"],"mappings":"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"}